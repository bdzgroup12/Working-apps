{"ast":null,"code":"var _jsxFileName = \"C:\\\\Working apps\\\\real-estate-website\\\\frontend\\\\src\\\\pages\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../config';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [settings, setSettings] = useState({\n    emailVerificationEnabled: true\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchSettings();\n  }, []);\n  const fetchSettings = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${config.apiUrl}/api/settings`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch settings');\n      }\n      const data = await response.json();\n      setSettings(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching settings:', error);\n      setError('Error loading settings');\n      setLoading(false);\n    }\n  };\n  const handleToggleEmailVerification = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${config.apiUrl}/api/settings/email-verification`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          enabled: !settings.emailVerificationEnabled\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update settings');\n      }\n      const data = await response.json();\n      setSettings(prev => ({\n        ...prev,\n        emailVerificationEnabled: !prev.emailVerificationEnabled\n      }));\n      setSuccessMessage('Settings updated successfully');\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error updating settings:', error);\n      setError('Error updating settings');\n      setTimeout(() => setError(null), 3000);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-page\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Email Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: settings.emailVerificationEnabled,\n            onChange: handleToggleEmailVerification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"setting-label\",\n          children: settings.emailVerificationEnabled ? 'Enabled' : 'Disabled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"setting-description\",\n        children: \"When enabled, new users must verify their email address before accessing their account. In development mode, you may want to disable this to test without email verification.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"8zl5nPQlI9mSIcNmAVKZp1AO/Iw=\", false, function () {\n  return [useNavigate];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","config","jsxDEV","_jsxDEV","Settings","_s","settings","setSettings","emailVerificationEnabled","loading","setLoading","error","setError","successMessage","setSuccessMessage","navigate","fetchSettings","token","localStorage","getItem","response","fetch","apiUrl","headers","ok","Error","data","json","console","handleToggleEmailVerification","method","body","JSON","stringify","enabled","prev","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Working apps/real-estate-website/frontend/src/pages/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport config from '../config';\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n  const [settings, setSettings] = useState({\r\n    emailVerificationEnabled: true\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const fetchSettings = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${config.apiUrl}/api/settings`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch settings');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSettings(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching settings:', error);\r\n      setError('Error loading settings');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleToggleEmailVerification = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`${config.apiUrl}/api/settings/email-verification`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          enabled: !settings.emailVerificationEnabled\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update settings');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSettings(prev => ({\r\n        ...prev,\r\n        emailVerificationEnabled: !prev.emailVerificationEnabled\r\n      }));\r\n      setSuccessMessage('Settings updated successfully');\r\n      setTimeout(() => setSuccessMessage(''), 3000);\r\n    } catch (error) {\r\n      console.error('Error updating settings:', error);\r\n      setError('Error updating settings');\r\n      setTimeout(() => setError(null), 3000);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"settings-page\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"settings-page\">\r\n      <h1>Settings</h1>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      \r\n      <div className=\"settings-section\">\r\n        <h2>Email Verification</h2>\r\n        <div className=\"setting-item\">\r\n          <label className=\"toggle-switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={settings.emailVerificationEnabled}\r\n              onChange={handleToggleEmailVerification}\r\n            />\r\n            <span className=\"toggle-slider\"></span>\r\n          </label>\r\n          <span className=\"setting-label\">\r\n            {settings.emailVerificationEnabled ? 'Enabled' : 'Disabled'}\r\n          </span>\r\n        </div>\r\n        <p className=\"setting-description\">\r\n          When enabled, new users must verify their email address before accessing their account.\r\n          In development mode, you may want to disable this to test without email verification.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}