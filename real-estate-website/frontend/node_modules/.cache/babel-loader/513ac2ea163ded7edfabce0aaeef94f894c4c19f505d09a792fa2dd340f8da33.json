{"ast":null,"code":"var _jsxFileName = \"C:\\\\Working apps\\\\real-estate-website\\\\frontend\\\\src\\\\pages\\\\RegionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../config';\nimport './RegionsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionsPage = () => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState('');\n  const [newRegion, setNewRegion] = useState({\n    name: '',\n    description: '',\n    isCustom: false\n  });\n  const [editingRegion, setEditingRegion] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [availableRegions, setAvailableRegions] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState('custom');\n  const navigate = useNavigate();\n\n  // Check if user is admin\n  const isAdmin = userRole === 'admin';\n  useEffect(() => {\n    console.log(\"RegionsPage mounted\");\n    // Fetch regions data\n    fetchRegions();\n\n    // Get user role from token\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        const decodedToken = JSON.parse(jsonPayload);\n        console.log(\"User role from token:\", decodedToken.role);\n        setUserRole(decodedToken.role);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    } else {\n      navigate('/auth');\n    }\n  }, [navigate]);\n  const fetchRegions = async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/auth');\n        return;\n      }\n      console.log('Fetching regions, token:', token.substring(0, 15) + '...');\n      const response = await fetch(`${config.apiUrl}/api/regions`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Regions API response status:', response.status);\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Regions data received:', data);\n      setRegions(data.regions || []);\n\n      // Create a list of available regions for the dropdown\n      if (data.regions && data.regions.length > 0) {\n        // Extract unique region names\n        const regionNames = [...new Set(data.regions.map(r => r.name))];\n        setAvailableRegions(regionNames);\n      }\n    } catch (error) {\n      console.error('Error fetching regions:', error);\n      setError('Failed to load regions. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingRegion) {\n      setEditingRegion(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewRegion(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleRegionSelectChange = e => {\n    const value = e.target.value;\n    setSelectedRegion(value);\n    if (value === 'custom') {\n      if (editingRegion) {\n        setEditingRegion(prev => ({\n          ...prev,\n          isCustom: true,\n          name: ''\n        }));\n      } else {\n        setNewRegion(prev => ({\n          ...prev,\n          isCustom: true,\n          name: ''\n        }));\n      }\n    } else {\n      if (editingRegion) {\n        setEditingRegion(prev => ({\n          ...prev,\n          isCustom: false,\n          name: value\n        }));\n      } else {\n        setNewRegion(prev => ({\n          ...prev,\n          isCustom: false,\n          name: value\n        }));\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isAdmin) return;\n    setSuccessMessage('');\n    setError(null);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/auth');\n        return;\n      }\n      let url = `${config.apiUrl}/api/regions`;\n      let method = 'POST';\n      let body = {\n        name: selectedRegion === 'custom' ? newRegion.name : selectedRegion,\n        description: newRegion.description\n      };\n\n      // If editing, use PUT method and include region ID\n      if (editingRegion) {\n        url = `${url}/${editingRegion.id}`;\n        method = 'PUT';\n        body = {\n          name: selectedRegion === 'custom' ? editingRegion.name : selectedRegion,\n          description: editingRegion.description\n        };\n      }\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      // Refresh regions list\n      fetchRegions();\n\n      // Reset form\n      setNewRegion({\n        name: '',\n        description: '',\n        isCustom: false\n      });\n      setSelectedRegion('custom');\n      setEditingRegion(null);\n      setShowForm(false);\n\n      // Show success message\n      setSuccessMessage(editingRegion ? 'Region updated successfully!' : 'Region added successfully!');\n    } catch (error) {\n      console.error('Error saving region:', error);\n      setError('Failed to save region. Please try again.');\n    }\n  };\n  const handleEdit = region => {\n    if (!isAdmin) return;\n\n    // Check if this region's name is in our available regions list\n    if (availableRegions.includes(region.name)) {\n      setSelectedRegion(region.name);\n      setEditingRegion({\n        ...region,\n        isCustom: false\n      });\n    } else {\n      setSelectedRegion('custom');\n      setEditingRegion({\n        ...region,\n        isCustom: true\n      });\n    }\n    setShowForm(true);\n    setSuccessMessage('');\n  };\n  const handleDelete = async id => {\n    if (!isAdmin) return;\n    if (!window.confirm('Are you sure you want to delete this region?')) {\n      return;\n    }\n    setSuccessMessage('');\n    setError(null);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/auth');\n        return;\n      }\n      const response = await fetch(`${config.apiUrl}/api/regions/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      // Refresh regions list\n      fetchRegions();\n      setSuccessMessage('Region deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting region:', error);\n      setError('Failed to delete region. Please try again.');\n    }\n  };\n  const handleCancel = () => {\n    setShowForm(false);\n    setEditingRegion(null);\n    setNewRegion({\n      name: '',\n      description: '',\n      isCustom: false\n    });\n    setSelectedRegion('custom');\n    setSuccessMessage('');\n  };\n  const handleBack = () => {\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regions-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regions-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBack,\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Regions in Spain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), isAdmin && !showForm && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: () => {\n          setShowForm(true);\n          setSelectedRegion('custom');\n          setNewRegion({\n            name: '',\n            description: '',\n            isCustom: true\n          });\n        },\n        children: \"Add New Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }, this), showForm && isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"region-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"region-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editingRegion ? 'Edit Region' : 'Add New Region'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"region-select\",\n            children: \"Region Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"region-select\",\n            value: selectedRegion,\n            onChange: handleRegionSelectChange,\n            className: \"region-select\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Custom region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), availableRegions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: region,\n              children: region\n            }, region, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), selectedRegion === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: editingRegion ? editingRegion.name : newRegion.name,\n            onChange: handleInputChange,\n            placeholder: \"Enter custom region name\",\n            className: \"custom-region-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: editingRegion ? editingRegion.description : newRegion.description,\n            onChange: handleInputChange,\n            placeholder: \"Describe the region...\",\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-button\",\n            children: editingRegion ? 'Update Region' : 'Add Region'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-button\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regions-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading regions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this) : regions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No regions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this) : regions.map(region => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"region-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: region.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: region.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleEdit(region),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(region.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }, this)]\n      }, region.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionsPage, \"5v+hIsJVv/s9JYvBZ6f5Uu4Icoo=\", false, function () {\n  return [useNavigate];\n});\n_c = RegionsPage;\nexport default RegionsPage;\nvar _c;\n$RefreshReg$(_c, \"RegionsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","config","jsxDEV","_jsxDEV","RegionsPage","_s","regions","setRegions","loading","setLoading","error","setError","userRole","setUserRole","newRegion","setNewRegion","name","description","isCustom","editingRegion","setEditingRegion","showForm","setShowForm","successMessage","setSuccessMessage","availableRegions","setAvailableRegions","selectedRegion","setSelectedRegion","navigate","isAdmin","console","log","fetchRegions","token","localStorage","getItem","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","decodedToken","JSON","parse","role","substring","response","fetch","apiUrl","headers","status","ok","Error","statusText","data","json","length","regionNames","Set","r","handleInputChange","e","value","target","prev","handleRegionSelectChange","handleSubmit","preventDefault","url","method","body","id","stringify","handleEdit","region","includes","handleDelete","window","confirm","handleCancel","handleBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","type","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Working apps/real-estate-website/frontend/src/pages/RegionsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport config from '../config';\r\nimport './RegionsPage.css';\r\n\r\nconst RegionsPage = () => {\r\n  const [regions, setRegions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [userRole, setUserRole] = useState('');\r\n  const [newRegion, setNewRegion] = useState({ \r\n    name: '', \r\n    description: '', \r\n    isCustom: false \r\n  });\r\n  const [editingRegion, setEditingRegion] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [availableRegions, setAvailableRegions] = useState([]);\r\n  const [selectedRegion, setSelectedRegion] = useState('custom');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is admin\r\n  const isAdmin = userRole === 'admin';\r\n\r\n  useEffect(() => {\r\n    console.log(\"RegionsPage mounted\");\r\n    // Fetch regions data\r\n    fetchRegions();\r\n    \r\n    // Get user role from token\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const base64Url = token.split('.')[1];\r\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n        \r\n        const decodedToken = JSON.parse(jsonPayload);\r\n        console.log(\"User role from token:\", decodedToken.role);\r\n        setUserRole(decodedToken.role);\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n      }\r\n    } else {\r\n      navigate('/auth');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const fetchRegions = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/auth');\r\n        return;\r\n      }\r\n\r\n      console.log('Fetching regions, token:', token.substring(0, 15) + '...');\r\n      \r\n      const response = await fetch(`${config.apiUrl}/api/regions`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log('Regions API response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Regions data received:', data);\r\n      \r\n      setRegions(data.regions || []);\r\n      \r\n      // Create a list of available regions for the dropdown\r\n      if (data.regions && data.regions.length > 0) {\r\n        // Extract unique region names\r\n        const regionNames = [...new Set(data.regions.map(r => r.name))];\r\n        setAvailableRegions(regionNames);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching regions:', error);\r\n      setError('Failed to load regions. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (editingRegion) {\r\n      setEditingRegion(prev => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setNewRegion(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n  \r\n  const handleRegionSelectChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedRegion(value);\r\n    \r\n    if (value === 'custom') {\r\n      if (editingRegion) {\r\n        setEditingRegion(prev => ({ ...prev, isCustom: true, name: '' }));\r\n      } else {\r\n        setNewRegion(prev => ({ ...prev, isCustom: true, name: '' }));\r\n      }\r\n    } else {\r\n      if (editingRegion) {\r\n        setEditingRegion(prev => ({ ...prev, isCustom: false, name: value }));\r\n      } else {\r\n        setNewRegion(prev => ({ ...prev, isCustom: false, name: value }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isAdmin) return;\r\n    \r\n    setSuccessMessage('');\r\n    setError(null);\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/auth');\r\n        return;\r\n      }\r\n      \r\n      let url = `${config.apiUrl}/api/regions`;\r\n      let method = 'POST';\r\n      let body = {\r\n        name: selectedRegion === 'custom' ? newRegion.name : selectedRegion,\r\n        description: newRegion.description\r\n      };\r\n      \r\n      // If editing, use PUT method and include region ID\r\n      if (editingRegion) {\r\n        url = `${url}/${editingRegion.id}`;\r\n        method = 'PUT';\r\n        body = {\r\n          name: selectedRegion === 'custom' ? editingRegion.name : selectedRegion,\r\n          description: editingRegion.description\r\n        };\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Refresh regions list\r\n      fetchRegions();\r\n      \r\n      // Reset form\r\n      setNewRegion({ name: '', description: '', isCustom: false });\r\n      setSelectedRegion('custom');\r\n      setEditingRegion(null);\r\n      setShowForm(false);\r\n      \r\n      // Show success message\r\n      setSuccessMessage(editingRegion ? 'Region updated successfully!' : 'Region added successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving region:', error);\r\n      setError('Failed to save region. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (region) => {\r\n    if (!isAdmin) return;\r\n    \r\n    // Check if this region's name is in our available regions list\r\n    if (availableRegions.includes(region.name)) {\r\n      setSelectedRegion(region.name);\r\n      setEditingRegion({...region, isCustom: false});\r\n    } else {\r\n      setSelectedRegion('custom');\r\n      setEditingRegion({...region, isCustom: true});\r\n    }\r\n    \r\n    setShowForm(true);\r\n    setSuccessMessage('');\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!isAdmin) return;\r\n    \r\n    if (!window.confirm('Are you sure you want to delete this region?')) {\r\n      return;\r\n    }\r\n    \r\n    setSuccessMessage('');\r\n    setError(null);\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/auth');\r\n        return;\r\n      }\r\n      \r\n      const response = await fetch(`${config.apiUrl}/api/regions/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Refresh regions list\r\n      fetchRegions();\r\n      setSuccessMessage('Region deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting region:', error);\r\n      setError('Failed to delete region. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowForm(false);\r\n    setEditingRegion(null);\r\n    setNewRegion({ name: '', description: '', isCustom: false });\r\n    setSelectedRegion('custom');\r\n    setSuccessMessage('');\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className=\"regions-page\">\r\n      <div className=\"regions-header\">\r\n        <button className=\"back-button\" onClick={handleBack}>Back to Dashboard</button>\r\n        <h1>Regions in Spain</h1>\r\n        {isAdmin && !showForm && (\r\n          <button \r\n            className=\"add-button\" \r\n            onClick={() => {\r\n              setShowForm(true);\r\n              setSelectedRegion('custom');\r\n              setNewRegion({ name: '', description: '', isCustom: true });\r\n            }}\r\n          >\r\n            Add New Region\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {showForm && isAdmin && (\r\n        <div className=\"region-form-container\">\r\n          <form className=\"region-form\" onSubmit={handleSubmit}>\r\n            <h2>{editingRegion ? 'Edit Region' : 'Add New Region'}</h2>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"region-select\">Region Name *</label>\r\n              <select\r\n                id=\"region-select\"\r\n                value={selectedRegion}\r\n                onChange={handleRegionSelectChange}\r\n                className=\"region-select\"\r\n                required\r\n              >\r\n                <option value=\"custom\">Custom region</option>\r\n                {availableRegions.map(region => (\r\n                  <option key={region} value={region}>{region}</option>\r\n                ))}\r\n              </select>\r\n              \r\n              {selectedRegion === 'custom' && (\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={editingRegion ? editingRegion.name : newRegion.name}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter custom region name\"\r\n                  className=\"custom-region-input\"\r\n                  required\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description *</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={editingRegion ? editingRegion.description : newRegion.description}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Describe the region...\"\r\n                rows={4}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"save-button\">\r\n                {editingRegion ? 'Update Region' : 'Add Region'}\r\n              </button>\r\n              <button type=\"button\" className=\"cancel-button\" onClick={handleCancel}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"regions-list\">\r\n        {loading ? (\r\n          <p>Loading regions...</p>\r\n        ) : regions.length === 0 ? (\r\n          <p>No regions found.</p>\r\n        ) : (\r\n          regions.map((region) => (\r\n            <div key={region.id} className=\"region-card\">\r\n              <div className=\"region-content\">\r\n                <h2>{region.name}</h2>\r\n                <p>{region.description}</p>\r\n              </div>\r\n              \r\n              {isAdmin && (\r\n                <div className=\"region-actions\">\r\n                  <button \r\n                    className=\"edit-button\" \r\n                    onClick={() => handleEdit(region)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"delete-button\" \r\n                    onClick={() => handleDelete(region.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}