{"ast":null,"code":"var _jsxFileName = \"C:\\\\Working apps\\\\real-estate-website\\\\frontend\\\\src\\\\pages\\\\RegionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../config';\nimport './RegionsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionsPage = () => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState('');\n  const [newRegion, setNewRegion] = useState({\n    name: '',\n    description: '',\n    isCustom: false,\n    tourist_places: ['']\n  });\n  const [editingRegion, setEditingRegion] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [availableRegions, setAvailableRegions] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState('custom');\n  const navigate = useNavigate();\n\n  // Check if user is admin\n  const isAdmin = userRole === 'admin';\n  useEffect(() => {\n    console.log(\"RegionsPage mounted\");\n    // Fetch regions data\n    fetchRegions();\n\n    // Get user role from token\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        const decodedToken = JSON.parse(jsonPayload);\n        console.log(\"User role from token:\", decodedToken.role);\n        setUserRole(decodedToken.role);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    } else {\n      navigate('/auth');\n    }\n  }, [navigate]);\n  const fetchRegions = async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/auth');\n        return;\n      }\n      console.log('Fetching regions, token:', token.substring(0, 15) + '...');\n      const response = await fetch(`${config.apiUrl}/api/regions`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Regions API response status:', response.status);\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Regions data received:', data);\n      setRegions(data.regions || []);\n\n      // Create a list of available regions for the dropdown\n      if (data.regions && data.regions.length > 0) {\n        // Extract unique region names\n        const regionNames = [...new Set(data.regions.map(r => r.name))];\n        setAvailableRegions(regionNames);\n      }\n    } catch (error) {\n      console.error('Error fetching regions:', error);\n      setError('Failed to load regions. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingRegion) {\n      setEditingRegion(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewRegion(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleRegionSelectChange = e => {\n    const value = e.target.value;\n    setSelectedRegion(value);\n    if (value === 'custom') {\n      if (editingRegion) {\n        setEditingRegion(prev => ({\n          ...prev,\n          isCustom: true,\n          name: ''\n        }));\n      } else {\n        setNewRegion(prev => ({\n          ...prev,\n          isCustom: true,\n          name: ''\n        }));\n      }\n    } else {\n      if (editingRegion) {\n        // Find the selected region to get its tourist places\n        const selectedRegionData = regions.find(r => r.name === value);\n        const tourist_places = (selectedRegionData === null || selectedRegionData === void 0 ? void 0 : selectedRegionData.tourist_places) || [''];\n        setEditingRegion(prev => ({\n          ...prev,\n          isCustom: false,\n          name: value,\n          tourist_places: tourist_places.length > 0 ? tourist_places : ['']\n        }));\n      } else {\n        // Find the selected region to get its tourist places\n        const selectedRegionData = regions.find(r => r.name === value);\n        const tourist_places = (selectedRegionData === null || selectedRegionData === void 0 ? void 0 : selectedRegionData.tourist_places) || [''];\n        setNewRegion(prev => ({\n          ...prev,\n          isCustom: false,\n          name: value,\n          tourist_places: tourist_places.length > 0 ? tourist_places : ['']\n        }));\n      }\n    }\n  };\n  const addTouristPlaceField = () => {\n    if (editingRegion) {\n      setEditingRegion(prev => ({\n        ...prev,\n        tourist_places: [...prev.tourist_places, '']\n      }));\n    } else {\n      setNewRegion(prev => ({\n        ...prev,\n        tourist_places: [...prev.tourist_places, '']\n      }));\n    }\n  };\n  const removeTouristPlaceField = index => {\n    if (editingRegion) {\n      setEditingRegion(prev => ({\n        ...prev,\n        tourist_places: prev.tourist_places.filter((_, i) => i !== index)\n      }));\n    } else {\n      setNewRegion(prev => ({\n        ...prev,\n        tourist_places: prev.tourist_places.filter((_, i) => i !== index)\n      }));\n    }\n  };\n  const handleTouristPlaceChange = (index, value) => {\n    if (editingRegion) {\n      const newTouristPlaces = [...editingRegion.tourist_places];\n      newTouristPlaces[index] = value;\n      setEditingRegion(prev => ({\n        ...prev,\n        tourist_places: newTouristPlaces\n      }));\n    } else {\n      const newTouristPlaces = [...newRegion.tourist_places];\n      newTouristPlaces[index] = value;\n      setNewRegion(prev => ({\n        ...prev,\n        tourist_places: newTouristPlaces\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isAdmin) return;\n    setSuccessMessage('');\n    setError(null);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/auth');\n        return;\n      }\n      let url = `${config.apiUrl}/api/regions`;\n      let method = 'POST';\n      let body = {\n        name: selectedRegion === 'custom' ? newRegion.name : selectedRegion,\n        description: newRegion.description,\n        tourist_places: newRegion.tourist_places.filter(place => place.trim() !== '')\n      };\n\n      // If editing, use PUT method and include region ID\n      if (editingRegion) {\n        url = `${url}/${editingRegion.id}`;\n        method = 'PUT';\n        body = {\n          name: selectedRegion === 'custom' ? editingRegion.name : selectedRegion,\n          description: editingRegion.description,\n          tourist_places: editingRegion.tourist_places.filter(place => place.trim() !== '')\n        };\n      }\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      // Refresh regions list\n      fetchRegions();\n\n      // Reset form\n      setNewRegion({\n        name: '',\n        description: '',\n        isCustom: false,\n        tourist_places: ['']\n      });\n      setSelectedRegion('custom');\n      setEditingRegion(null);\n      setShowForm(false);\n\n      // Show success message\n      setSuccessMessage(editingRegion ? 'Region updated successfully!' : 'Region added successfully!');\n    } catch (error) {\n      console.error('Error saving region:', error);\n      setError('Failed to save region. Please try again.');\n    }\n  };\n  const handleEdit = region => {\n    if (!isAdmin) return;\n\n    // Check if this region's name is in our available regions list\n    if (availableRegions.includes(region.name)) {\n      var _region$tourist_place;\n      setSelectedRegion(region.name);\n      setEditingRegion({\n        ...region,\n        isCustom: false,\n        tourist_places: ((_region$tourist_place = region.tourist_places) === null || _region$tourist_place === void 0 ? void 0 : _region$tourist_place.length) > 0 ? region.tourist_places : ['']\n      });\n    } else {\n      var _region$tourist_place2;\n      setSelectedRegion('custom');\n      setEditingRegion({\n        ...region,\n        isCustom: true,\n        tourist_places: ((_region$tourist_place2 = region.tourist_places) === null || _region$tourist_place2 === void 0 ? void 0 : _region$tourist_place2.length) > 0 ? region.tourist_places : ['']\n      });\n    }\n    setShowForm(true);\n    setSuccessMessage('');\n  };\n  const handleDelete = async id => {\n    if (!isAdmin) return;\n    if (!window.confirm('Are you sure you want to delete this region?')) {\n      return;\n    }\n    setSuccessMessage('');\n    setError(null);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/auth');\n        return;\n      }\n      const response = await fetch(`${config.apiUrl}/api/regions/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      // Refresh regions list\n      fetchRegions();\n      setSuccessMessage('Region deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting region:', error);\n      setError('Failed to delete region. Please try again.');\n    }\n  };\n  const handleCancel = () => {\n    setShowForm(false);\n    setEditingRegion(null);\n    setNewRegion({\n      name: '',\n      description: '',\n      isCustom: false,\n      tourist_places: ['']\n    });\n    setSelectedRegion('custom');\n    setSuccessMessage('');\n  };\n  const handleBack = () => {\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regions-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regions-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBack,\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Regions in Spain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), isAdmin && !showForm && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: () => {\n          setShowForm(true);\n          setSelectedRegion('custom');\n          setNewRegion({\n            name: '',\n            description: '',\n            isCustom: true,\n            tourist_places: ['']\n          });\n        },\n        children: \"Add New Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }, this), showForm && isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"region-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"region-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editingRegion ? 'Edit Region' : 'Add New Region'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"region-select\",\n            children: \"Region Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"region-select\",\n            value: selectedRegion,\n            onChange: handleRegionSelectChange,\n            className: \"region-select\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Custom region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), availableRegions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: region,\n              children: region\n            }, region, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), selectedRegion === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: editingRegion ? editingRegion.name : newRegion.name,\n            onChange: handleInputChange,\n            placeholder: \"Enter custom region name\",\n            className: \"custom-region-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: editingRegion ? editingRegion.description : newRegion.description,\n            onChange: handleInputChange,\n            placeholder: \"Describe the region...\",\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tourist Places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tourist-places-container\",\n            children: [(editingRegion ? editingRegion.tourist_places : newRegion.tourist_places).map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tourist-place-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: place,\n                onChange: e => handleTouristPlaceChange(index, e.target.value),\n                placeholder: \"Enter tourist place name\",\n                className: \"tourist-place-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeTouristPlaceField(index),\n                className: \"remove-tourist-place-btn\",\n                disabled: (editingRegion ? editingRegion.tourist_places : newRegion.tourist_places).length <= 1,\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addTouristPlaceField,\n              className: \"add-tourist-place-btn\",\n              children: \"+ Add Tourist Place\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-button\",\n            children: editingRegion ? 'Update Region' : 'Add Region'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-button\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regions-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading regions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this) : regions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No regions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this) : regions.map(region => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"region-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: region.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: region.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this), region.tourist_places && region.tourist_places.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tourist-places\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Famous Tourist Places:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tourist-places-list\",\n              children: region.tourist_places.map((place, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"tourist-place-item\",\n                children: place\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleEdit(region),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(region.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 17\n        }, this)]\n      }, region.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionsPage, \"tS1xjBC96GLC9PYJ2RBUqro15zY=\", false, function () {\n  return [useNavigate];\n});\n_c = RegionsPage;\nexport default RegionsPage;\nvar _c;\n$RefreshReg$(_c, \"RegionsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","config","jsxDEV","_jsxDEV","RegionsPage","_s","regions","setRegions","loading","setLoading","error","setError","userRole","setUserRole","newRegion","setNewRegion","name","description","isCustom","tourist_places","editingRegion","setEditingRegion","showForm","setShowForm","successMessage","setSuccessMessage","availableRegions","setAvailableRegions","selectedRegion","setSelectedRegion","navigate","isAdmin","console","log","fetchRegions","token","localStorage","getItem","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","decodedToken","JSON","parse","role","substring","response","fetch","apiUrl","headers","status","ok","Error","statusText","data","json","length","regionNames","Set","r","handleInputChange","e","value","target","prev","handleRegionSelectChange","selectedRegionData","find","addTouristPlaceField","removeTouristPlaceField","index","filter","_","i","handleTouristPlaceChange","newTouristPlaces","handleSubmit","preventDefault","url","method","body","place","trim","id","stringify","handleEdit","region","includes","_region$tourist_place","_region$tourist_place2","handleDelete","window","confirm","handleCancel","handleBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","type","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Working apps/real-estate-website/frontend/src/pages/RegionsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport config from '../config';\r\nimport './RegionsPage.css';\r\n\r\nconst RegionsPage = () => {\r\n  const [regions, setRegions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [userRole, setUserRole] = useState('');\r\n  const [newRegion, setNewRegion] = useState({ \r\n    name: '', \r\n    description: '', \r\n    isCustom: false,\r\n    tourist_places: [''] \r\n  });\r\n  const [editingRegion, setEditingRegion] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [availableRegions, setAvailableRegions] = useState([]);\r\n  const [selectedRegion, setSelectedRegion] = useState('custom');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is admin\r\n  const isAdmin = userRole === 'admin';\r\n\r\n  useEffect(() => {\r\n    console.log(\"RegionsPage mounted\");\r\n    // Fetch regions data\r\n    fetchRegions();\r\n    \r\n    // Get user role from token\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const base64Url = token.split('.')[1];\r\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n        \r\n        const decodedToken = JSON.parse(jsonPayload);\r\n        console.log(\"User role from token:\", decodedToken.role);\r\n        setUserRole(decodedToken.role);\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n      }\r\n    } else {\r\n      navigate('/auth');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const fetchRegions = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/auth');\r\n        return;\r\n      }\r\n\r\n      console.log('Fetching regions, token:', token.substring(0, 15) + '...');\r\n      \r\n      const response = await fetch(`${config.apiUrl}/api/regions`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log('Regions API response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Regions data received:', data);\r\n      \r\n      setRegions(data.regions || []);\r\n      \r\n      // Create a list of available regions for the dropdown\r\n      if (data.regions && data.regions.length > 0) {\r\n        // Extract unique region names\r\n        const regionNames = [...new Set(data.regions.map(r => r.name))];\r\n        setAvailableRegions(regionNames);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching regions:', error);\r\n      setError('Failed to load regions. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (editingRegion) {\r\n      setEditingRegion(prev => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setNewRegion(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n  \r\n  const handleRegionSelectChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedRegion(value);\r\n    \r\n    if (value === 'custom') {\r\n      if (editingRegion) {\r\n        setEditingRegion(prev => ({ ...prev, isCustom: true, name: '' }));\r\n      } else {\r\n        setNewRegion(prev => ({ ...prev, isCustom: true, name: '' }));\r\n      }\r\n    } else {\r\n      if (editingRegion) {\r\n        // Find the selected region to get its tourist places\r\n        const selectedRegionData = regions.find(r => r.name === value);\r\n        const tourist_places = selectedRegionData?.tourist_places || [''];\r\n        \r\n        setEditingRegion(prev => ({ \r\n          ...prev, \r\n          isCustom: false, \r\n          name: value,\r\n          tourist_places: tourist_places.length > 0 ? tourist_places : [''] \r\n        }));\r\n      } else {\r\n        // Find the selected region to get its tourist places\r\n        const selectedRegionData = regions.find(r => r.name === value);\r\n        const tourist_places = selectedRegionData?.tourist_places || [''];\r\n        \r\n        setNewRegion(prev => ({ \r\n          ...prev, \r\n          isCustom: false, \r\n          name: value,\r\n          tourist_places: tourist_places.length > 0 ? tourist_places : ['']\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const addTouristPlaceField = () => {\r\n    if (editingRegion) {\r\n      setEditingRegion(prev => ({\r\n        ...prev,\r\n        tourist_places: [...prev.tourist_places, '']\r\n      }));\r\n    } else {\r\n      setNewRegion(prev => ({\r\n        ...prev,\r\n        tourist_places: [...prev.tourist_places, '']\r\n      }));\r\n    }\r\n  };\r\n\r\n  const removeTouristPlaceField = (index) => {\r\n    if (editingRegion) {\r\n      setEditingRegion(prev => ({\r\n        ...prev,\r\n        tourist_places: prev.tourist_places.filter((_, i) => i !== index)\r\n      }));\r\n    } else {\r\n      setNewRegion(prev => ({\r\n        ...prev,\r\n        tourist_places: prev.tourist_places.filter((_, i) => i !== index)\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleTouristPlaceChange = (index, value) => {\r\n    if (editingRegion) {\r\n      const newTouristPlaces = [...editingRegion.tourist_places];\r\n      newTouristPlaces[index] = value;\r\n      setEditingRegion(prev => ({\r\n        ...prev,\r\n        tourist_places: newTouristPlaces\r\n      }));\r\n    } else {\r\n      const newTouristPlaces = [...newRegion.tourist_places];\r\n      newTouristPlaces[index] = value;\r\n      setNewRegion(prev => ({\r\n        ...prev,\r\n        tourist_places: newTouristPlaces\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isAdmin) return;\r\n    \r\n    setSuccessMessage('');\r\n    setError(null);\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/auth');\r\n        return;\r\n      }\r\n      \r\n      let url = `${config.apiUrl}/api/regions`;\r\n      let method = 'POST';\r\n      let body = {\r\n        name: selectedRegion === 'custom' ? newRegion.name : selectedRegion,\r\n        description: newRegion.description,\r\n        tourist_places: newRegion.tourist_places.filter(place => place.trim() !== '')\r\n      };\r\n      \r\n      // If editing, use PUT method and include region ID\r\n      if (editingRegion) {\r\n        url = `${url}/${editingRegion.id}`;\r\n        method = 'PUT';\r\n        body = {\r\n          name: selectedRegion === 'custom' ? editingRegion.name : selectedRegion,\r\n          description: editingRegion.description,\r\n          tourist_places: editingRegion.tourist_places.filter(place => place.trim() !== '')\r\n        };\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(body)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Refresh regions list\r\n      fetchRegions();\r\n      \r\n      // Reset form\r\n      setNewRegion({ \r\n        name: '', \r\n        description: '', \r\n        isCustom: false,\r\n        tourist_places: [''] \r\n      });\r\n      setSelectedRegion('custom');\r\n      setEditingRegion(null);\r\n      setShowForm(false);\r\n      \r\n      // Show success message\r\n      setSuccessMessage(editingRegion ? 'Region updated successfully!' : 'Region added successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving region:', error);\r\n      setError('Failed to save region. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (region) => {\r\n    if (!isAdmin) return;\r\n    \r\n    // Check if this region's name is in our available regions list\r\n    if (availableRegions.includes(region.name)) {\r\n      setSelectedRegion(region.name);\r\n      setEditingRegion({\r\n        ...region, \r\n        isCustom: false,\r\n        tourist_places: region.tourist_places?.length > 0 ? region.tourist_places : ['']\r\n      });\r\n    } else {\r\n      setSelectedRegion('custom');\r\n      setEditingRegion({\r\n        ...region, \r\n        isCustom: true,\r\n        tourist_places: region.tourist_places?.length > 0 ? region.tourist_places : ['']\r\n      });\r\n    }\r\n    \r\n    setShowForm(true);\r\n    setSuccessMessage('');\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!isAdmin) return;\r\n    \r\n    if (!window.confirm('Are you sure you want to delete this region?')) {\r\n      return;\r\n    }\r\n    \r\n    setSuccessMessage('');\r\n    setError(null);\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/auth');\r\n        return;\r\n      }\r\n      \r\n      const response = await fetch(`${config.apiUrl}/api/regions/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      // Refresh regions list\r\n      fetchRegions();\r\n      setSuccessMessage('Region deleted successfully!');\r\n    } catch (error) {\r\n      console.error('Error deleting region:', error);\r\n      setError('Failed to delete region. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowForm(false);\r\n    setEditingRegion(null);\r\n    setNewRegion({ \r\n      name: '', \r\n      description: '', \r\n      isCustom: false,\r\n      tourist_places: [''] \r\n    });\r\n    setSelectedRegion('custom');\r\n    setSuccessMessage('');\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className=\"regions-page\">\r\n      <div className=\"regions-header\">\r\n        <button className=\"back-button\" onClick={handleBack}>Back to Dashboard</button>\r\n        <h1>Regions in Spain</h1>\r\n        {isAdmin && !showForm && (\r\n          <button \r\n            className=\"add-button\" \r\n            onClick={() => {\r\n              setShowForm(true);\r\n              setSelectedRegion('custom');\r\n              setNewRegion({ \r\n                name: '', \r\n                description: '', \r\n                isCustom: true,\r\n                tourist_places: ['']\r\n              });\r\n            }}\r\n          >\r\n            Add New Region\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {showForm && isAdmin && (\r\n        <div className=\"region-form-container\">\r\n          <form className=\"region-form\" onSubmit={handleSubmit}>\r\n            <h2>{editingRegion ? 'Edit Region' : 'Add New Region'}</h2>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"region-select\">Region Name *</label>\r\n              <select\r\n                id=\"region-select\"\r\n                value={selectedRegion}\r\n                onChange={handleRegionSelectChange}\r\n                className=\"region-select\"\r\n                required\r\n              >\r\n                <option value=\"custom\">Custom region</option>\r\n                {availableRegions.map(region => (\r\n                  <option key={region} value={region}>{region}</option>\r\n                ))}\r\n              </select>\r\n              \r\n              {selectedRegion === 'custom' && (\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={editingRegion ? editingRegion.name : newRegion.name}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter custom region name\"\r\n                  className=\"custom-region-input\"\r\n                  required\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description *</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={editingRegion ? editingRegion.description : newRegion.description}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Describe the region...\"\r\n                rows={4}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Tourist Places</label>\r\n              <div className=\"tourist-places-container\">\r\n                {(editingRegion ? editingRegion.tourist_places : newRegion.tourist_places).map((place, index) => (\r\n                  <div key={index} className=\"tourist-place-input-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={place}\r\n                      onChange={(e) => handleTouristPlaceChange(index, e.target.value)}\r\n                      placeholder=\"Enter tourist place name\"\r\n                      className=\"tourist-place-input\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeTouristPlaceField(index)}\r\n                      className=\"remove-tourist-place-btn\"\r\n                      disabled={(editingRegion ? editingRegion.tourist_places : newRegion.tourist_places).length <= 1}\r\n                    >\r\n                      ✕\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={addTouristPlaceField}\r\n                  className=\"add-tourist-place-btn\"\r\n                >\r\n                  + Add Tourist Place\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"save-button\">\r\n                {editingRegion ? 'Update Region' : 'Add Region'}\r\n              </button>\r\n              <button type=\"button\" className=\"cancel-button\" onClick={handleCancel}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"regions-list\">\r\n        {loading ? (\r\n          <p>Loading regions...</p>\r\n        ) : regions.length === 0 ? (\r\n          <p>No regions found.</p>\r\n        ) : (\r\n          regions.map((region) => (\r\n            <div key={region.id} className=\"region-card\">\r\n              <div className=\"region-content\">\r\n                <h2>{region.name}</h2>\r\n                <p>{region.description}</p>\r\n                \r\n                {region.tourist_places && region.tourist_places.length > 0 && (\r\n                  <div className=\"tourist-places\">\r\n                    <h3>Famous Tourist Places:</h3>\r\n                    <ul className=\"tourist-places-list\">\r\n                      {region.tourist_places.map((place, index) => (\r\n                        <li key={index} className=\"tourist-place-item\">{place}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {isAdmin && (\r\n                <div className=\"region-actions\">\r\n                  <button \r\n                    className=\"edit-button\" \r\n                    onClick={() => handleEdit(region)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"delete-button\" \r\n                    onClick={() => handleDelete(region.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionsPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC;IACzCkB,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,KAAK;IACfC,cAAc,EAAE,CAAC,EAAE;EACrB,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC4B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,QAAQ,CAAC;EAE9D,MAAMgC,QAAQ,GAAG9B,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM+B,OAAO,GAAGnB,QAAQ,KAAK,OAAO;EAEpCb,SAAS,CAAC,MAAM;IACdiC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC;IACAC,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,SAAS,GAAGH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACD,KAAK,CAAC,EAAE,CAAC,CAACM,GAAG,CAAC,UAASC,CAAC,EAAE;UAC5E,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC;QAC5CV,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEkB,YAAY,CAACG,IAAI,CAAC;QACvDzC,WAAW,CAACsC,YAAY,CAACG,IAAI,CAAC;MAChC,CAAC,CAAC,OAAO5C,KAAK,EAAE;QACdsB,OAAO,CAACtB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,MAAM;MACLoB,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BzB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM0B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVL,QAAQ,CAAC,OAAO,CAAC;QACjB;MACF;MAEAE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,KAAK,CAACoB,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;MAEvE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGxD,MAAM,CAACyD,MAAM,cAAc,EAAE;QAC3DC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUxB,KAAK;QAClC;MACF,CAAC,CAAC;MAEFH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEuB,QAAQ,CAACI,MAAM,CAAC;MAE5D,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,SAASN,QAAQ,CAACI,MAAM,KAAKJ,QAAQ,CAACO,UAAU,EAAE,CAAC;MACrE;MAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCjC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE+B,IAAI,CAAC;MAE3CzD,UAAU,CAACyD,IAAI,CAAC1D,OAAO,IAAI,EAAE,CAAC;;MAE9B;MACA,IAAI0D,IAAI,CAAC1D,OAAO,IAAI0D,IAAI,CAAC1D,OAAO,CAAC4D,MAAM,GAAG,CAAC,EAAE;QAC3C;QACA,MAAMC,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACJ,IAAI,CAAC1D,OAAO,CAACuC,GAAG,CAACwB,CAAC,IAAIA,CAAC,CAACrD,IAAI,CAAC,CAAC,CAAC;QAC/DW,mBAAmB,CAACwC,WAAW,CAAC;MAClC;IACF,CAAC,CAAC,OAAOzD,KAAK,EAAE;MACdsB,OAAO,CAACtB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAAC,iDAAiD,CAAC;IAC7D,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM6D,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEvD,IAAI;MAAEwD;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,IAAIrD,aAAa,EAAE;MACjBC,gBAAgB,CAACqD,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAAC1D,IAAI,GAAGwD;MAAM,CAAC,CAAC,CAAC;IACxD,CAAC,MAAM;MACLzD,YAAY,CAAC2D,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAAC1D,IAAI,GAAGwD;MAAM,CAAC,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMG,wBAAwB,GAAIJ,CAAC,IAAK;IACtC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B3C,iBAAiB,CAAC2C,KAAK,CAAC;IAExB,IAAIA,KAAK,KAAK,QAAQ,EAAE;MACtB,IAAIpD,aAAa,EAAE;QACjBC,gBAAgB,CAACqD,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAExD,QAAQ,EAAE,IAAI;UAAEF,IAAI,EAAE;QAAG,CAAC,CAAC,CAAC;MACnE,CAAC,MAAM;QACLD,YAAY,CAAC2D,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAExD,QAAQ,EAAE,IAAI;UAAEF,IAAI,EAAE;QAAG,CAAC,CAAC,CAAC;MAC/D;IACF,CAAC,MAAM;MACL,IAAII,aAAa,EAAE;QACjB;QACA,MAAMwD,kBAAkB,GAAGtE,OAAO,CAACuE,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACrD,IAAI,KAAKwD,KAAK,CAAC;QAC9D,MAAMrD,cAAc,GAAG,CAAAyD,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEzD,cAAc,KAAI,CAAC,EAAE,CAAC;QAEjEE,gBAAgB,CAACqD,IAAI,KAAK;UACxB,GAAGA,IAAI;UACPxD,QAAQ,EAAE,KAAK;UACfF,IAAI,EAAEwD,KAAK;UACXrD,cAAc,EAAEA,cAAc,CAAC+C,MAAM,GAAG,CAAC,GAAG/C,cAAc,GAAG,CAAC,EAAE;QAClE,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL;QACA,MAAMyD,kBAAkB,GAAGtE,OAAO,CAACuE,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACrD,IAAI,KAAKwD,KAAK,CAAC;QAC9D,MAAMrD,cAAc,GAAG,CAAAyD,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEzD,cAAc,KAAI,CAAC,EAAE,CAAC;QAEjEJ,YAAY,CAAC2D,IAAI,KAAK;UACpB,GAAGA,IAAI;UACPxD,QAAQ,EAAE,KAAK;UACfF,IAAI,EAAEwD,KAAK;UACXrD,cAAc,EAAEA,cAAc,CAAC+C,MAAM,GAAG,CAAC,GAAG/C,cAAc,GAAG,CAAC,EAAE;QAClE,CAAC,CAAC,CAAC;MACL;IACF;EACF,CAAC;EAED,MAAM2D,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI1D,aAAa,EAAE;MACjBC,gBAAgB,CAACqD,IAAI,KAAK;QACxB,GAAGA,IAAI;QACPvD,cAAc,EAAE,CAAC,GAAGuD,IAAI,CAACvD,cAAc,EAAE,EAAE;MAC7C,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACLJ,YAAY,CAAC2D,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPvD,cAAc,EAAE,CAAC,GAAGuD,IAAI,CAACvD,cAAc,EAAE,EAAE;MAC7C,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAM4D,uBAAuB,GAAIC,KAAK,IAAK;IACzC,IAAI5D,aAAa,EAAE;MACjBC,gBAAgB,CAACqD,IAAI,KAAK;QACxB,GAAGA,IAAI;QACPvD,cAAc,EAAEuD,IAAI,CAACvD,cAAc,CAAC8D,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK;MAClE,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACLjE,YAAY,CAAC2D,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPvD,cAAc,EAAEuD,IAAI,CAACvD,cAAc,CAAC8D,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK;MAClE,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMI,wBAAwB,GAAGA,CAACJ,KAAK,EAAER,KAAK,KAAK;IACjD,IAAIpD,aAAa,EAAE;MACjB,MAAMiE,gBAAgB,GAAG,CAAC,GAAGjE,aAAa,CAACD,cAAc,CAAC;MAC1DkE,gBAAgB,CAACL,KAAK,CAAC,GAAGR,KAAK;MAC/BnD,gBAAgB,CAACqD,IAAI,KAAK;QACxB,GAAGA,IAAI;QACPvD,cAAc,EAAEkE;MAClB,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL,MAAMA,gBAAgB,GAAG,CAAC,GAAGvE,SAAS,CAACK,cAAc,CAAC;MACtDkE,gBAAgB,CAACL,KAAK,CAAC,GAAGR,KAAK;MAC/BzD,YAAY,CAAC2D,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPvD,cAAc,EAAEkE;MAClB,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOf,CAAC,IAAK;IAChCA,CAAC,CAACgB,cAAc,CAAC,CAAC;IAClB,IAAI,CAACxD,OAAO,EAAE;IAEdN,iBAAiB,CAAC,EAAE,CAAC;IACrBd,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMwB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVL,QAAQ,CAAC,OAAO,CAAC;QACjB;MACF;MAEA,IAAI0D,GAAG,GAAG,GAAGvF,MAAM,CAACyD,MAAM,cAAc;MACxC,IAAI+B,MAAM,GAAG,MAAM;MACnB,IAAIC,IAAI,GAAG;QACT1E,IAAI,EAAEY,cAAc,KAAK,QAAQ,GAAGd,SAAS,CAACE,IAAI,GAAGY,cAAc;QACnEX,WAAW,EAAEH,SAAS,CAACG,WAAW;QAClCE,cAAc,EAAEL,SAAS,CAACK,cAAc,CAAC8D,MAAM,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;MAC9E,CAAC;;MAED;MACA,IAAIxE,aAAa,EAAE;QACjBoE,GAAG,GAAG,GAAGA,GAAG,IAAIpE,aAAa,CAACyE,EAAE,EAAE;QAClCJ,MAAM,GAAG,KAAK;QACdC,IAAI,GAAG;UACL1E,IAAI,EAAEY,cAAc,KAAK,QAAQ,GAAGR,aAAa,CAACJ,IAAI,GAAGY,cAAc;UACvEX,WAAW,EAAEG,aAAa,CAACH,WAAW;UACtCE,cAAc,EAAEC,aAAa,CAACD,cAAc,CAAC8D,MAAM,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;QAClF,CAAC;MACH;MAEA,MAAMpC,QAAQ,GAAG,MAAMC,KAAK,CAAC+B,GAAG,EAAE;QAChCC,MAAM;QACN9B,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUxB,KAAK;QAClC,CAAC;QACDuD,IAAI,EAAEtC,IAAI,CAAC0C,SAAS,CAACJ,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAAClC,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,SAASN,QAAQ,CAACI,MAAM,KAAKJ,QAAQ,CAACO,UAAU,EAAE,CAAC;MACrE;;MAEA;MACA7B,YAAY,CAAC,CAAC;;MAEd;MACAnB,YAAY,CAAC;QACXC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,KAAK;QACfC,cAAc,EAAE,CAAC,EAAE;MACrB,CAAC,CAAC;MACFU,iBAAiB,CAAC,QAAQ,CAAC;MAC3BR,gBAAgB,CAAC,IAAI,CAAC;MACtBE,WAAW,CAAC,KAAK,CAAC;;MAElB;MACAE,iBAAiB,CAACL,aAAa,GAAG,8BAA8B,GAAG,4BAA4B,CAAC;IAClG,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdsB,OAAO,CAACtB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,0CAA0C,CAAC;IACtD;EACF,CAAC;EAED,MAAMoF,UAAU,GAAIC,MAAM,IAAK;IAC7B,IAAI,CAACjE,OAAO,EAAE;;IAEd;IACA,IAAIL,gBAAgB,CAACuE,QAAQ,CAACD,MAAM,CAAChF,IAAI,CAAC,EAAE;MAAA,IAAAkF,qBAAA;MAC1CrE,iBAAiB,CAACmE,MAAM,CAAChF,IAAI,CAAC;MAC9BK,gBAAgB,CAAC;QACf,GAAG2E,MAAM;QACT9E,QAAQ,EAAE,KAAK;QACfC,cAAc,EAAE,EAAA+E,qBAAA,GAAAF,MAAM,CAAC7E,cAAc,cAAA+E,qBAAA,uBAArBA,qBAAA,CAAuBhC,MAAM,IAAG,CAAC,GAAG8B,MAAM,CAAC7E,cAAc,GAAG,CAAC,EAAE;MACjF,CAAC,CAAC;IACJ,CAAC,MAAM;MAAA,IAAAgF,sBAAA;MACLtE,iBAAiB,CAAC,QAAQ,CAAC;MAC3BR,gBAAgB,CAAC;QACf,GAAG2E,MAAM;QACT9E,QAAQ,EAAE,IAAI;QACdC,cAAc,EAAE,EAAAgF,sBAAA,GAAAH,MAAM,CAAC7E,cAAc,cAAAgF,sBAAA,uBAArBA,sBAAA,CAAuBjC,MAAM,IAAG,CAAC,GAAG8B,MAAM,CAAC7E,cAAc,GAAG,CAAC,EAAE;MACjF,CAAC,CAAC;IACJ;IAEAI,WAAW,CAAC,IAAI,CAAC;IACjBE,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAM2E,YAAY,GAAG,MAAOP,EAAE,IAAK;IACjC,IAAI,CAAC9D,OAAO,EAAE;IAEd,IAAI,CAACsE,MAAM,CAACC,OAAO,CAAC,8CAA8C,CAAC,EAAE;MACnE;IACF;IAEA7E,iBAAiB,CAAC,EAAE,CAAC;IACrBd,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMwB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVL,QAAQ,CAAC,OAAO,CAAC;QACjB;MACF;MAEA,MAAM0B,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGxD,MAAM,CAACyD,MAAM,gBAAgBmC,EAAE,EAAE,EAAE;QACjEJ,MAAM,EAAE,QAAQ;QAChB9B,OAAO,EAAE;UACP,eAAe,EAAE,UAAUxB,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAI,CAACqB,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,SAASN,QAAQ,CAACI,MAAM,KAAKJ,QAAQ,CAACO,UAAU,EAAE,CAAC;MACrE;;MAEA;MACA7B,YAAY,CAAC,CAAC;MACdT,iBAAiB,CAAC,8BAA8B,CAAC;IACnD,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdsB,OAAO,CAACtB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,4CAA4C,CAAC;IACxD;EACF,CAAC;EAED,MAAM4F,YAAY,GAAGA,CAAA,KAAM;IACzBhF,WAAW,CAAC,KAAK,CAAC;IAClBF,gBAAgB,CAAC,IAAI,CAAC;IACtBN,YAAY,CAAC;MACXC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,KAAK;MACfC,cAAc,EAAE,CAAC,EAAE;IACrB,CAAC,CAAC;IACFU,iBAAiB,CAAC,QAAQ,CAAC;IAC3BJ,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAM+E,UAAU,GAAGA,CAAA,KAAM;IACvB1E,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,oBACE3B,OAAA;IAAKsG,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BvG,OAAA;MAAKsG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BvG,OAAA;QAAQsG,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEH,UAAW;QAAAE,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/E5G,OAAA;QAAAuG,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBhF,OAAO,IAAI,CAACT,QAAQ,iBACnBnB,OAAA;QACEsG,SAAS,EAAC,YAAY;QACtBE,OAAO,EAAEA,CAAA,KAAM;UACbpF,WAAW,CAAC,IAAI,CAAC;UACjBM,iBAAiB,CAAC,QAAQ,CAAC;UAC3Bd,YAAY,CAAC;YACXC,IAAI,EAAE,EAAE;YACRC,WAAW,EAAE,EAAE;YACfC,QAAQ,EAAE,IAAI;YACdC,cAAc,EAAE,CAAC,EAAE;UACrB,CAAC,CAAC;QACJ,CAAE;QAAAuF,QAAA,EACH;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELvF,cAAc,iBAAIrB,OAAA;MAAKsG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAElF;IAAc;MAAAoF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACzErG,KAAK,iBAAIP,OAAA;MAAKsG,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEhG;IAAK;MAAAkG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAErDzF,QAAQ,IAAIS,OAAO,iBAClB5B,OAAA;MAAKsG,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACpCvG,OAAA;QAAMsG,SAAS,EAAC,aAAa;QAACO,QAAQ,EAAE1B,YAAa;QAAAoB,QAAA,gBACnDvG,OAAA;UAAAuG,QAAA,EAAKtF,aAAa,GAAG,aAAa,GAAG;QAAgB;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3D5G,OAAA;UAAKsG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvG,OAAA;YAAO8G,OAAO,EAAC,eAAe;YAAAP,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpD5G,OAAA;YACE0F,EAAE,EAAC,eAAe;YAClBrB,KAAK,EAAE5C,cAAe;YACtBsF,QAAQ,EAAEvC,wBAAyB;YACnC8B,SAAS,EAAC,eAAe;YACzBU,QAAQ;YAAAT,QAAA,gBAERvG,OAAA;cAAQqE,KAAK,EAAC,QAAQ;cAAAkC,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC5CrF,gBAAgB,CAACmB,GAAG,CAACmD,MAAM,iBAC1B7F,OAAA;cAAqBqE,KAAK,EAAEwB,MAAO;cAAAU,QAAA,EAAEV;YAAM,GAA9BA,MAAM;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACrD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,EAERnF,cAAc,KAAK,QAAQ,iBAC1BzB,OAAA;YACEiH,IAAI,EAAC,MAAM;YACXvB,EAAE,EAAC,MAAM;YACT7E,IAAI,EAAC,MAAM;YACXwD,KAAK,EAAEpD,aAAa,GAAGA,aAAa,CAACJ,IAAI,GAAGF,SAAS,CAACE,IAAK;YAC3DkG,QAAQ,EAAE5C,iBAAkB;YAC5B+C,WAAW,EAAC,0BAA0B;YACtCZ,SAAS,EAAC,qBAAqB;YAC/BU,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN5G,OAAA;UAAKsG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvG,OAAA;YAAO8G,OAAO,EAAC,aAAa;YAAAP,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClD5G,OAAA;YACE0F,EAAE,EAAC,aAAa;YAChB7E,IAAI,EAAC,aAAa;YAClBwD,KAAK,EAAEpD,aAAa,GAAGA,aAAa,CAACH,WAAW,GAAGH,SAAS,CAACG,WAAY;YACzEiG,QAAQ,EAAE5C,iBAAkB;YAC5B+C,WAAW,EAAC,wBAAwB;YACpCC,IAAI,EAAE,CAAE;YACRH,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5G,OAAA;UAAKsG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvG,OAAA;YAAAuG,QAAA,EAAO;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7B5G,OAAA;YAAKsG,SAAS,EAAC,0BAA0B;YAAAC,QAAA,GACtC,CAACtF,aAAa,GAAGA,aAAa,CAACD,cAAc,GAAGL,SAAS,CAACK,cAAc,EAAE0B,GAAG,CAAC,CAAC8C,KAAK,EAAEX,KAAK,kBAC1F7E,OAAA;cAAiBsG,SAAS,EAAC,2BAA2B;cAAAC,QAAA,gBACpDvG,OAAA;gBACEiH,IAAI,EAAC,MAAM;gBACX5C,KAAK,EAAEmB,KAAM;gBACbuB,QAAQ,EAAG3C,CAAC,IAAKa,wBAAwB,CAACJ,KAAK,EAAET,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE;gBACjE6C,WAAW,EAAC,0BAA0B;gBACtCZ,SAAS,EAAC;cAAqB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC,eACF5G,OAAA;gBACEiH,IAAI,EAAC,QAAQ;gBACbT,OAAO,EAAEA,CAAA,KAAM5B,uBAAuB,CAACC,KAAK,CAAE;gBAC9CyB,SAAS,EAAC,0BAA0B;gBACpCc,QAAQ,EAAE,CAACnG,aAAa,GAAGA,aAAa,CAACD,cAAc,GAAGL,SAAS,CAACK,cAAc,EAAE+C,MAAM,IAAI,CAAE;gBAAAwC,QAAA,EACjG;cAED;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAfD/B,KAAK;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgBV,CACN,CAAC,eACF5G,OAAA;cACEiH,IAAI,EAAC,QAAQ;cACbT,OAAO,EAAE7B,oBAAqB;cAC9B2B,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAClC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN5G,OAAA;UAAKsG,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BvG,OAAA;YAAQiH,IAAI,EAAC,QAAQ;YAACX,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1CtF,aAAa,GAAG,eAAe,GAAG;UAAY;YAAAwF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACT5G,OAAA;YAAQiH,IAAI,EAAC,QAAQ;YAACX,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEJ,YAAa;YAAAG,QAAA,EAAC;UAEvE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eAED5G,OAAA;MAAKsG,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BlG,OAAO,gBACNL,OAAA;QAAAuG,QAAA,EAAG;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACvBzG,OAAO,CAAC4D,MAAM,KAAK,CAAC,gBACtB/D,OAAA;QAAAuG,QAAA,EAAG;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAExBzG,OAAO,CAACuC,GAAG,CAAEmD,MAAM,iBACjB7F,OAAA;QAAqBsG,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1CvG,OAAA;UAAKsG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BvG,OAAA;YAAAuG,QAAA,EAAKV,MAAM,CAAChF;UAAI;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtB5G,OAAA;YAAAuG,QAAA,EAAIV,MAAM,CAAC/E;UAAW;YAAA2F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAE1Bf,MAAM,CAAC7E,cAAc,IAAI6E,MAAM,CAAC7E,cAAc,CAAC+C,MAAM,GAAG,CAAC,iBACxD/D,OAAA;YAAKsG,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BvG,OAAA;cAAAuG,QAAA,EAAI;YAAsB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/B5G,OAAA;cAAIsG,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAChCV,MAAM,CAAC7E,cAAc,CAAC0B,GAAG,CAAC,CAAC8C,KAAK,EAAEX,KAAK,kBACtC7E,OAAA;gBAAgBsG,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAEf;cAAK,GAA5CX,KAAK;gBAAA4B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA4C,CAC3D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAELhF,OAAO,iBACN5B,OAAA;UAAKsG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BvG,OAAA;YACEsG,SAAS,EAAC,aAAa;YACvBE,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACC,MAAM,CAAE;YAAAU,QAAA,EACnC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5G,OAAA;YACEsG,SAAS,EAAC,eAAe;YACzBE,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAACJ,MAAM,CAACH,EAAE,CAAE;YAAAa,QAAA,EACxC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA,GAhCOf,MAAM,CAACH,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiCd,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1G,EAAA,CA1eID,WAAW;EAAA,QAiBEJ,WAAW;AAAA;AAAAwH,EAAA,GAjBxBpH,WAAW;AA4ejB,eAAeA,WAAW;AAAC,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}